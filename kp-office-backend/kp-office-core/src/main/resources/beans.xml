<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2014 Kaiserpfalz EDV-Service, Roland T. Lichti
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       ">

    <context:component-scan
            base-package="de.kaiserpfalzEdv.office.tenants,
                          de.kaiserpfalzEdv.office.security">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <jpa:repositories base-package="de.kaiserpfalzEdv.office.tenants,
                                    de.kaiserpfalzEdv.office.security"/>


    <context:annotation-config/>
    <tx:annotation-driven mode="proxy" />

    <context:property-placeholder properties-ref="configuration" system-properties-mode="OVERRIDE"
                                  ignore-resource-not-found="false" ignore-unresolvable="false" local-override="true"/>


    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!--<bean id="dbInitializer" class="liquibase.integration.spring.SpringLiquibase" lazy-init="false">-->
        <!--<property name="changeLog" value="classpath:/ddl/db-changelog.xml"/>-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="dropFirst" value="${dropDatabase}"/>-->
        <!--<property name="shouldRun" value="${initializeDatabase}"/>-->
    <!--</bean>-->

    <bean id="entityManager" factory-bean="entityManagerFactory" factory-method="createEntityManager"
          destroy-method="close"/>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml"/>
        <property name="persistenceUnitManager" ref="persistenceUnitManager"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="${databaseType}"/>
                <property name="showSql" value="${showSql}"/>
                <property name="generateDdl" value="${generateDdl}"/>
                <property name="databasePlatform" value="${databasePlatform}"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <bean factory-bean="jpaPropertiesGenerator" factory-method="getProperties" lazy-init="true"/>
        </property>
    </bean>
    <bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
        <property name="validationMode" value="AUTO"/>
        <property name="defaultDataSource" ref="dataSource"/>
        <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml"/>
    </bean>
    <bean id="jpaPropertiesGenerator" class="de.kaiserpfalzEdv.commons.jndi.MapProperties">
        <constructor-arg>
            <util:map scope="singleton" key-type="java.lang.String" value-type="java.lang.Object">
                <entry key="hibernate.show_sql" value="false"/>
                <entry key="hibernate.format_sql" value="false"/>
                <entry key="hibernate.use_sql_comments" value="false"/>
                <entry key="hibernate.generate_statistics" value="false"/>
                <entry key="hibernate.cache.use_second_level_cache" value="${databaseCache}"/>
                <entry key="hibernate.cache.use_query_cache" value="${databaseCache}"/>
                <entry key="hibernate.cache.region.factory_class"
                       value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory"/>
                <entry key="net.sf.ehcache.configurationResourceName" value="META-INF/database-cache.xml"/>
                <entry key="hibernate.type_contributors" value-ref="customDataTypes"/>
            </util:map>
        </constructor-arg>
    </bean>
    <bean id="customDataTypes" class="de.kaiserpfalzEdv.commons.db.CustomHibernateTypes">
        <property name="typeContributors">
            <util:set value-type="org.hibernate.metamodel.spi.TypeContributor">
                <bean class="de.kaiserpfalzEdv.commons.db.ZonedDateTimeType"/>
            </util:set>
        </property>
    </bean>


    <bean id="configuration" factory-bean="configGenerator" factory-method="getProperties" lazy-init="true"/>
    <bean id="configGenerator" class="de.kaiserpfalzEdv.commons.jndi.MapProperties" init-method="init"
          destroy-method="close">
        <constructor-arg>
            <util:map scope="singleton" key-type="java.lang.String" value-type="java.lang.Object">
                <entry key="databaseType">
                    <jee:jndi-lookup jndi-name="databaseType" expected-type="java.lang.String" cache="true"
                                     lookup-on-startup="true"/>
                </entry>
                <entry key="databasePlatform">
                    <jee:jndi-lookup jndi-name="databasePlatform" expected-type="java.lang.String" cache="true"
                                     lookup-on-startup="true"/>
                </entry>
                <entry key="showSql">
                    <jee:jndi-lookup jndi-name="showSql" default-value="false" expected-type="java.lang.String"
                                     cache="true" lookup-on-startup="true"/>
                </entry>
                <entry key="generateDdl">
                    <jee:jndi-lookup jndi-name="generateDdl" default-value="false" expected-type="java.lang.String"
                                     cache="true" lookup-on-startup="true"/>
                </entry>
                <entry key="dropDatabase">
                    <jee:jndi-lookup jndi-name="dropDatabase" default-value="false" expected-type="java.lang.String"
                                     cache="true" lookup-on-startup="true"/>
                </entry>
                <entry key="initializeDatabase">
                    <jee:jndi-lookup jndi-name="initializeDatabase" default-value="false"
                                     expected-type="java.lang.String" cache="true" lookup-on-startup="true"/>
                </entry>
                <entry key="databaseCache">
                    <jee:jndi-lookup jndi-name="databaseCache" default-value="false" expected-type="java.lang.String"
                                     cache="true" lookup-on-startup="true"/>
                </entry>

                <entry key="host">
                    <jee:jndi-lookup jndi-name="host" expected-type="java.lang.String" cache="true"
                                     lookup-on-startup="true"/>
                </entry>
                <entry key="host-id">
                    <jee:jndi-lookup jndi-name="host-id" expected-type="java.lang.String" cache="true"
                                     lookup-on-startup="true"/>
                </entry>
            </util:map>
        </constructor-arg>
    </bean>


    <jee:jndi-lookup id="dataSource" jndi-name="db/kpoffice" lazy-init="true" expected-type="javax.sql.DataSource"
                     cache="true"/>
</beans>