---
- name: Check volume already existing
  stat:
    path: "{{ item.base | default(nfs_default_base) }}/{{ item.name }}"
  with_items: "{{ nfs_volumes }}"
  register: nfs_volumes_pre_check
  when: "'nfs-server' in group_names"

- name: Message about skipping
  fail: msg="Volume {{ item.item.base | default(nfs_default_base) }}/{{ item.item.name }} already existing on filesystem. Won't change it!"
  when: "'nfs-server' in group_names and item.stat.exists == True"
  with_items: "{{ nfs_volumes_pre_check.results }}"

- name: Create groups for NFS exports
  group:
    name: "{{ item.item.group | default(nfs_default_group) }}"
    state: present
  when: "'nfs-server' in group_names"
  with_items: "{{ nfs_volumes_pre_check.results }}"
  register: groupinfo

- debug: msg="GID for {{ item.item.group }} is {{ item.gid }}"
  when: "'nfs-server' in group_names and item.changed == True"
  with_items: "{{ groupinfo.results }}"

- name: Create volumes
  file:
    path: "{{ item.item.base | default(nfs_default_base) }}/{{ item.item.name }}"
    state: directory
    owner: "{{ item.item.owner | default(nfs_default_owner) }}"
    group: "{{ item.item.group | default(nfs_default_group) }}"
    mode: "{{ item.item.mode   | default(nfs_default_mode) }}"
  when: "'nfs-server' in group_names and item.stat.exists == False"
  with_items: "{{ nfs_volumes_pre_check.results }}"

- name: Export volumes
  lineinfile:
    dest: /etc/exports
    line: "{{ item.item.base | default(nfs_default_base) }}/{{ item.item.name }} *({{ item.item.nfs_export_options | default(nfs_default_export_mode) }})"
    regexp: "^{{ item.item.base | default(nfs_default_base) }}/{{ item.item.name }}"
  when: "'nfs-server' in group_names and item.stat.exists == False"
  with_items: "{{ nfs_volumes_pre_check.results }}"
  notify:
    - restart nfs-server