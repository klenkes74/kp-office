<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2014 Kaiserpfalz EDV-Service, Roland T. Lichti
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd

                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="de.kaiserpfalzEdv.office,de.kaiserpfalzEdv.commons">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
    <tx:annotation-driven/>

    <bean id="securityManager" class="org.apache.shiro.mgt.DefaultSecurityManager">
        <property name="realms" ref="officeSecurityRealms"/>
        <property name="subjectFactory" ref="officeSubjectFactory"/>
        <property name="sessionManager" ref="shiroSessionManager"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>
    <bean id="shiroSessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationInterval" value="3600000"/>
        <property name="sessionDAO" ref="shiroSessionDAO"/>
        <property name="sessionFactory" ref="officeSessionFactory"/>
    </bean>
    <bean id="shiroSessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="sessionIdGenerator" ref="officeTicketIdSessionIdGenerator"/>
    </bean>
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="${basedir}/target/test-classes/shiro-cache.xml"/>
    </bean>


    <util:list id="officeSecurityRealms" value-type="org.apache.shiro.realm.Realm">
        <ref bean="officeTicketRealm"/>
        <ref bean="officeLoginRealm"/>
    </util:list>

    <bean id="officeSubjectFactory" class="de.kaiserpfalzEdv.office.security.shiro.session.OfficeSubjectFactory">
        <property name="ticketRealm">
            <bean factory-bean="officeTicketRealm" factory-method="getName"/>
        </property>
        <property name="loginRealm">
            <bean factory-bean="officeLoginRealm" factory-method="getName"/>
        </property>
    </bean>


    <bean class="org.apache.shiro.spring.aop.SpringAnnotationResolver"/>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- For simplest integration, so that all SecurityUtils.* methods work in all cases, -->
    <!-- make the securityManager bean a static singleton.  DO NOT do this in web         -->
    <!-- applications - see the 'Web Applications' section below instead.                 -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>


    <bean id="eventBus" class="com.google.common.eventbus.EventBus" lazy-init="true"/>
</beans>
